plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.emazon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
ext {
	springBootVersion = "3.3.2"
	mapstructVersion = "1.5.5.Final"
	lombokVersion = "1.18.30"
	lombokMapstructBindingVersion = "0.2.0"
	openApiVersion = "1.7.0"
}

dependencies {
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	compileOnly "org.projectlombok:lombok:${lombokVersion}"

	developmentOnly "org.springframework.boot:spring-boot-devtools:${springBootVersion}"

	implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
	implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
	implementation "org.springdoc:springdoc-openapi-ui:${openApiVersion}"
	implementation "org.springdoc:springdoc-openapi-webflux-ui:${openApiVersion}"
	implementation "org.springframework.security:spring-security-crypto"
	implementation 'org.hibernate.validator:hibernate-validator:6.2.0.Final'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.4'
	implementation 'io.github.openfeign:feign-okhttp:9.2.0'
	implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'

	implementation 'mysql:mysql-connector-java:8.0.33'

	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2', 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	testImplementation 'junit:junit:4.13.1'
	testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
	testImplementation 'org.springframework.security:spring-security-test'

}

tasks.named('test') {
	useJUnitPlatform()
}
